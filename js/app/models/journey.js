!function(){var t={}.hasOwnProperty,e=function(e,o){function n(){this.constructor=e}for(var i in o)t.call(o,i)&&(e[i]=o[i]);return n.prototype=o.prototype,e.prototype=new n,e.__super__=o.prototype,e};define(["jquery","underscore","backbone","config","app/collections/waypoints","app/collections/steps","app/models/weather_details","jquery.cookie"],function(t,o,n,i,r,a,s){var p,l;return p=function(n){function p(){return l=p.__super__.constructor.apply(this,arguments)}return e(p,n),p.prototype.defaults={mode:"walking",altitude_factor:1.13046330315024},p.prototype.initialize=function(){var e=this;return this.waypoints=new r,this.waypoints.journey=this,this.steps=new a,this.set("pace",t.cookie("jp_speed")||"average"),this.on("change",function(){return e.waypoints.reset(e.get("waypoints")),e.steps.reset(e.get("steps"))}),this.on("change:pace",function(){return t.cookie("jp_speed",e.get("pace"),{path:"/",expires:365})}),this.on("sync",function(){return t("a[href='#results']").show().tab("show"),e.get("encoded_polyline")?e.updateMap():void 0})},p.prototype.validate=function(t){var e,n;return e=[],this.get("example")||(o(["walking","cycling"]).indexOf(t.mode)>=0||e.push(""+t.mode+" is not a valid mode"),n=this.waypoints.filter(function(t){return t.isValid()}),n.length>1||e.push("you need a minimum of two waypoints")),e.length>0?e:void 0},p.prototype.url=function(){var t;return t="mode="+this.get("mode"),this.waypoints.each(function(e){return t+="&"+e.queryStr()}),"http://staging.journeyplanner.org.nz/api/route.json?"+t},p.prototype.parse=function(t){return t.success&&t.total>0?t.journeys[0]:void 0},p.prototype.weather_details=function(){var t;return t=this.steps.bounding_box().getCenter(),this._weather_details=new s({lat:t.lat(),lng:t.lng()}),this._weather_details.fetch(),this._weather_details},p.prototype.total_time=function(){return 60*(this.get("total_distance")/(1e3*this.currentSpeed()))},p.prototype.car_cost=function(){return i.CAR_COST[this.get("mode")]*(this.get("total_distance")/1e3)},p.prototype.health_cost=function(){return i.HEALTH_COST[this.get("mode")]*(this.get("total_distance")/1e3)},p.prototype.carbon_saving=function(){return.214*(this.get("total_distance")/1e3)},p.prototype.calculate_calories=function(t){return Math.round(t*this.total_time()*this.currentEffort()*this.get("altitude_factor"))},p.prototype.currentSpeed=function(){return i.SPEEDS[this.get("mode")][this.get("pace")]},p.prototype.currentEffort=function(){return i.EFFORT[this.get("mode")][this.get("pace")]},p.prototype.elevation_marker=function(){return this._elevation_marker||(this._elevation_marker=new google.maps.Marker({map:App.map,icon:this.elevation_icon()}))},p.prototype.elevation_icon=function(){return{anchor:new google.maps.Point(14,34),url:"img/elevation_markers/icon_"+this.get("mode")+".png"}},p.prototype.showElevationMarker=function(t){var e;return null==t&&(t=0),e=t*this.get("total_distance"),this.elevation_marker().setOptions({position:this.pointAlongPath(e),visible:!0})},p.prototype.hideElevationMarker=function(){return this.elevation_marker().setVisible(!1)},p.prototype.pointAlongPath=function(t){var e,o,n=this;return null==t&&(t=0),o=null,null!=this.polyline()&&(e=0,this.polyline().getPath().forEach(function(i,r){var a,s,p;if(r>0&&null===o){if(s=n.polyline().getPath().getAt(r-1),p=google.maps.geometry.spherical.computeDistanceBetween(s,i),!(e+p>t))return e+=p;a=(t-e)/p,o=google.maps.geometry.spherical.interpolate(s,i,a)}})),o},p.prototype.showOverlays=function(t){var e;return null!=(e=this.polyline())&&e.setMap(t),this.waypoints.each(function(e){return e.getMarker().setMap(t)})},p.prototype.hideOverlays=function(){return this.showOverlays(null)},p.prototype.polyline=function(){return this.get("encoded_polyline")?this._polyline||(this._polyline=new google.maps.Polyline({map:App.map,path:google.maps.geometry.encoding.decodePath(this.get("encoded_polyline").polyline),strokeColor:"#2564a5",strokeWeight:4,strokeOpacity:.7})):void 0},p.prototype.waypointMarkers=function(){return this.waypoints.map(function(t){var e;return e=t.getMarker()})},p.prototype.updateMap=function(){return null!=App.map?(App.map.fitBounds(this.steps.bounding_box()),this.showOverlays(App.map)):void 0},p}(n.Model)})}.call(this);